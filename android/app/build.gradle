def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

def appProperties = new Properties()
def appPropertiesFile = rootProject.file('app.properties')
if (appPropertiesFile.exists()) {
    appProperties.load(new FileInputStream(appPropertiesFile))
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def appVersionCode = appProperties.getProperty('versionCode')
if (appVersionCode == null) {
    appVersionCode = '1'
}

def appVersionName = appProperties.getProperty('versionName')
if (appVersionName == null) {
    appVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'com.google.gms.google-services'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

dependencies {
    implementation platform('com.google.firebase:firebase-bom:31.1.1')
}

android {
    compileSdkVersion 33
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
//    useAndroidX=true
//    enableJetifier=true
    defaultConfig {
        applicationId "store.mundo.negocio"
        minSdkVersion 19
        targetSdkVersion flutter.targetSdkVersion
        versionCode appVersionCode.toInteger()
        versionName appVersionName

        multiDexEnabled true
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
    }

}

flutter {
    source '../..'
}
